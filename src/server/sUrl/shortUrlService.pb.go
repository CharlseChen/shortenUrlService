// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shortUrlService.proto

package sUrl

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetShortProductRequest struct {
	SourceUrl            string   `protobuf:"bytes,1,opt,name=sourceUrl,proto3" json:"sourceUrl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortProductRequest) Reset()         { *m = GetShortProductRequest{} }
func (m *GetShortProductRequest) String() string { return proto.CompactTextString(m) }
func (*GetShortProductRequest) ProtoMessage()    {}
func (*GetShortProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bebf2ada6d7d99b, []int{0}
}

func (m *GetShortProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortProductRequest.Unmarshal(m, b)
}
func (m *GetShortProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortProductRequest.Marshal(b, m, deterministic)
}
func (m *GetShortProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortProductRequest.Merge(m, src)
}
func (m *GetShortProductRequest) XXX_Size() int {
	return xxx_messageInfo_GetShortProductRequest.Size(m)
}
func (m *GetShortProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortProductRequest proto.InternalMessageInfo

func (m *GetShortProductRequest) GetSourceUrl() string {
	if m != nil {
		return m.SourceUrl
	}
	return ""
}

type GetShortProductReponse struct {
	TargetUrl            string   `protobuf:"bytes,1,opt,name=targetUrl,proto3" json:"targetUrl,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShortProductReponse) Reset()         { *m = GetShortProductReponse{} }
func (m *GetShortProductReponse) String() string { return proto.CompactTextString(m) }
func (*GetShortProductReponse) ProtoMessage()    {}
func (*GetShortProductReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4bebf2ada6d7d99b, []int{1}
}

func (m *GetShortProductReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShortProductReponse.Unmarshal(m, b)
}
func (m *GetShortProductReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShortProductReponse.Marshal(b, m, deterministic)
}
func (m *GetShortProductReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShortProductReponse.Merge(m, src)
}
func (m *GetShortProductReponse) XXX_Size() int {
	return xxx_messageInfo_GetShortProductReponse.Size(m)
}
func (m *GetShortProductReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShortProductReponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetShortProductReponse proto.InternalMessageInfo

func (m *GetShortProductReponse) GetTargetUrl() string {
	if m != nil {
		return m.TargetUrl
	}
	return ""
}

func (m *GetShortProductReponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetShortProductRequest)(nil), "sus.GetShortProductRequest")
	proto.RegisterType((*GetShortProductReponse)(nil), "sus.GetShortProductReponse")
}

func init() { proto.RegisterFile("shortUrlService.proto", fileDescriptor_4bebf2ada6d7d99b) }

var fileDescriptor_4bebf2ada6d7d99b = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x4d, 0x4a, 0x03, 0x41,
	0x10, 0x85, 0x49, 0x04, 0x25, 0xbd, 0x89, 0x34, 0x28, 0x4d, 0xcc, 0x42, 0x66, 0xe5, 0x6a, 0x1a,
	0x15, 0xbc, 0x82, 0xdb, 0x90, 0x21, 0x07, 0x68, 0xdb, 0xa2, 0x33, 0xd0, 0xe9, 0x6a, 0xab, 0xaa,
	0x87, 0x59, 0x7b, 0x05, 0x8f, 0xe6, 0x15, 0x3c, 0x88, 0xcc, 0x88, 0xbf, 0x8c, 0xcb, 0x7a, 0xaf,
	0x3e, 0xea, 0xd5, 0x53, 0x67, 0xbc, 0x47, 0x92, 0x1d, 0xc5, 0x06, 0xa8, 0x6b, 0x3d, 0xd4, 0x99,
	0x50, 0x50, 0x1f, 0x71, 0xe1, 0xd5, 0x3a, 0x20, 0x86, 0x08, 0xd6, 0xe5, 0xd6, 0xba, 0x94, 0x50,
	0x9c, 0xb4, 0x98, 0xf8, 0x63, 0xa5, 0xba, 0x53, 0xe7, 0xf7, 0x20, 0xcd, 0x80, 0x6f, 0x08, 0x1f,
	0x8b, 0x97, 0x2d, 0x3c, 0x15, 0x60, 0xd1, 0x6b, 0xb5, 0x60, 0x2c, 0xe4, 0x61, 0x47, 0xd1, 0xcc,
	0x2e, 0x67, 0x57, 0x8b, 0xed, 0xb7, 0x50, 0x6d, 0x26, 0xb8, 0x8c, 0x89, 0x61, 0xe0, 0xc4, 0x51,
	0x00, 0xf9, 0xc1, 0x7d, 0x09, 0xda, 0xa8, 0x93, 0x03, 0x30, 0xbb, 0x00, 0x66, 0x3e, 0x7a, 0x9f,
	0xe3, 0x4d, 0xaf, 0x96, 0xcd, 0xef, 0x2f, 0x34, 0xa8, 0xe5, 0x9f, 0x23, 0xfa, 0xa2, 0xe6, 0xc2,
	0xf5, 0x74, 0xe4, 0xd5, 0x3f, 0xe6, 0x98, 0xab, 0x32, 0xcf, 0xaf, 0x6f, 0x2f, 0x73, 0xad, 0x4f,
	0x6d, 0x77, 0x6d, 0xa1, 0x77, 0x87, 0x1c, 0xc1, 0x82, 0xdf, 0xe3, 0xc3, 0xf1, 0x58, 0xc5, 0xed,
	0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xab, 0xae, 0x69, 0xe1, 0x46, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShortUrlServiceClient is the client API for ShortUrlService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShortUrlServiceClient interface {
	//获取短链接
	GetShortProduct(ctx context.Context, in *GetShortProductRequest, opts ...grpc.CallOption) (*GetShortProductReponse, error)
}

type shortUrlServiceClient struct {
	cc *grpc.ClientConn
}

func NewShortUrlServiceClient(cc *grpc.ClientConn) ShortUrlServiceClient {
	return &shortUrlServiceClient{cc}
}

func (c *shortUrlServiceClient) GetShortProduct(ctx context.Context, in *GetShortProductRequest, opts ...grpc.CallOption) (*GetShortProductReponse, error) {
	out := new(GetShortProductReponse)
	err := c.cc.Invoke(ctx, "/sus.ShortUrlService/GetShortProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShortUrlServiceServer is the server API for ShortUrlService service.
type ShortUrlServiceServer interface {
	//获取短链接
	GetShortProduct(context.Context, *GetShortProductRequest) (*GetShortProductReponse, error)
}

// UnimplementedShortUrlServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShortUrlServiceServer struct {
}

func (*UnimplementedShortUrlServiceServer) GetShortProduct(ctx context.Context, req *GetShortProductRequest) (*GetShortProductReponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShortProduct not implemented")
}

func RegisterShortUrlServiceServer(s *grpc.Server, srv ShortUrlServiceServer) {
	s.RegisterService(&_ShortUrlService_serviceDesc, srv)
}

func _ShortUrlService_GetShortProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShortProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortUrlServiceServer).GetShortProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sus.ShortUrlService/GetShortProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortUrlServiceServer).GetShortProduct(ctx, req.(*GetShortProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShortUrlService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sus.ShortUrlService",
	HandlerType: (*ShortUrlServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetShortProduct",
			Handler:    _ShortUrlService_GetShortProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shortUrlService.proto",
}
